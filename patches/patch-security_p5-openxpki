Index: security/p5-openxpki/files/patch-Makefile.PL
===================================================================
--- security/p5-openxpki/files/patch-Makefile.PL	(revision 383783)
+++ security/p5-openxpki/files/patch-Makefile.PL	(working copy)
@@ -1,66 +1,70 @@
---- Makefile.PL.orig	2014-12-02 20:05:23 UTC
+--- Makefile.PL.orig	2015-04-11 09:17:07 UTC
 +++ Makefile.PL
-@@ -249,49 +249,6 @@ else {
-   print STDERR "Logger is not installed. Continue anyway.\n";
+@@ -83,19 +83,22 @@ print STDERR "OpenSSL binary:  $openssl_
+ # OpenSSL 0.9.7l 28 Sep 2006
+ # OpenSSL 1.0.0a 1 Jun 2010
+ my $openssl_version_string = `$openssl_binary version`;
+-my ($openssl_version_major, $openssl_version_minor, $openssl_version_fix, $openssl_version_patch);
+-if ($openssl_version_string =~ m/\s*OpenSSL\s+(\d+)\.(\d+)\.(\d+)([a-zA-Z]+)/) {
++my ($openssl_version_major, $openssl_version_minor, $openssl_version_fix, $openssl_version_patch, $openssl_version_flavour);
++if ($openssl_version_string =~ m/\s*OpenSSL\s+(\d+)\.(\d+)\.(\d+)([a-zA-Z]+)/i) {
+     # OpenSSL 0.9
++    $openssl_version_flavour = 'OpenSSL';
+     $openssl_version_major = $1;
+     $openssl_version_minor = $2;
+     $openssl_version_fix   = $3;
+     $openssl_version_patch = $4;
+-    print "OpenSSL version: major=$openssl_version_major, minor=$openssl_version_minor, fix=$openssl_version_fix, patch=$openssl_version_patch\n";
+-} elsif ($openssl_version_string =~ m/\s*OpenSSL\s+(\d+)\.(\d+)\.(\d+)\s+/) {
++    print "$openssl_version_flavour version: major=$openssl_version_major, minor=$openssl_version_minor, fix=$openssl_version_fix, patch=$openssl_version_patch\n";
++    
++} elsif ($openssl_version_string =~ m/\s*(OpenSSL|LibreSSL)\s+(\d+)\.(\d+)\.(\d+)\s+/) {
+     # OpenSSL 1.0
+-    $openssl_version_major = $1;
+-    $openssl_version_minor = $2;
+-    $openssl_version_fix   = $3;
++    $openssl_version_flavour = $1;
++    $openssl_version_major = $2;
++    $openssl_version_minor = $3;
++    $openssl_version_fix   = $4;
+     print "OpenSSL version: major=$openssl_version_major, minor=$openssl_version_minor, fix=$openssl_version_fix\n";
+ } else {
+     print "Problem: malformed openssl version string!\n";
+@@ -103,12 +106,22 @@ if ($openssl_version_string =~ m/\s*Open
+     exit 1;
  }
  
--# check if we should add -shared
--# not all platforms support this feature
--my %flags = ();
--
--open $fh, '>test.c' or die "Cannot open test.c. Stopped";
--print $fh "int main() {}\n";
--close $fh;
--use Config;
--my $cc = $Config{'cc'};
--
--my $cc_supports_shared = 1;
--if (open $fh, "$cc -shared -o test test.c 2>&1 |") {
--    while (my $line = <$fh>) {
--        if ($line =~ m{ unrecognized .* option .* -shared }xms) {
--	    $cc_supports_shared = 0;
--        }
--    }
--    close $fh;
--    if ($CHILD_ERROR) {
--        $cc_supports_shared = 0;
--    }
--
--    if (! $cc_supports_shared)
--    {
--        print STDERR "C compiler does not support -shared.\n";
--    }
--    else {
--        if ($^O ne 'darwin') {
--            print STDERR "C compiler supports -share. Adding it to LDDLFLAGS.\n";
--            $flags{'LDDLFLAGS'} = '-shared';
--        }
--        else {
--            print STDERR "C compiler claims to support -share. But we are on Mac OS X, experience shows that it still does not work with -share, so we won't add it to LDDLFLAGS ...\n";
--        }
--    }
--}
--else {
--    print STDERR "Could not run C compiler. Continue anyway.\n";
--}
--
--unlink('test.c');
--unlink('test');
--
- # See lib/ExtUtils/MakeMaker.pm for details of how to influence
- # the contents of the Makefile that is written.
- WriteMakefile(
-@@ -299,7 +256,6 @@ WriteMakefile(
-     'VERSION'   => $openxpki_version,
-     'LIBS'      => ["-L$openssl_lib_dir -lcrypto"],
-     'INC'       => "-I. -I$openssl_inc_dir",
--    'CCFLAGS'   => '-O2 -g '.$Config{ccflags},
-     'PREREQ_PM' => {
- #    'Class::Accessor::Fast'  => '0.31', # Constituent of module Class::Accessor
- #					 # which is a prerequisite of Class::Accessor::Chained, see below
-@@ -397,5 +353,4 @@ WriteMakefile(
-                               't/cfg.binary.openssl']},
-     'XSPROTOARG' => '-noprototypes',
-     'EXE_FILES' => [ 'bin/openxpkictl','bin/openxpkicmd', 'bin/openxpkiadm', 'bin/openxpkicli'],    
--    %flags,
- );
+-# Now make sure version is 0.9.8
+-unless ( (($openssl_version_major == 0) &&
+-          ($openssl_version_minor == 9) &&
+-          ($openssl_version_fix   == 8)) or
+-         ($openssl_version_major == 1 &&
+-          $openssl_version_minor == 0)) {
++# Warn on old openssl - should work but lacks support for some features 
++if ($openssl_version_major == 0 &&
++    $openssl_version_minor == 9 &&
++    $openssl_version_fix   == 8) {
++
++    print STDERR "Warning: openssl 0.9.8 found - this will work but lacks some features, e.g. server side key generation!";
++              
++} elsif ( $openssl_version_flavour =~ m/LibreSSL/i ) {
++    
++    print STDERR "Warning: LibreSSL found, support for LibreSSL is experimental!";
++    
++} elsif (not 
++    ($openssl_version_flavour =~ m/OpenSSL/i &&
++     $openssl_version_major == 1 &&
++     $openssl_version_minor == 0 )) {
++         
+     print STDERR "\n";
+     print STDERR "ERROR: OpenSSL 0.9.8  or 1.0 is required.\n";
+     print STDERR "Consider setting OPENSSL_PREFIX correctly.\n\n";
+@@ -130,7 +143,7 @@ if ( -s '../../VERSION' ) {
+     $openxpki_version = `cat ../../VERSION`;
+     chomp $openxpki_version;
+ } elsif ( -e($vergen) ) {
+-    $openxpki_version = `$vergen --format version`;
++    $openxpki_version = "0.27.0";
+ 
+     if ($CHILD_ERROR != 0) {
+         $openxpki_version = undef;
