Index: irc/unreal/files/patch-configure
===================================================================
--- irc/unreal/files/patch-configure	(revision 0)
+++ irc/unreal/files/patch-configure	(working copy)
@@ -0,0 +1,50 @@
+--- configure.orig	2014-07-26 17:42:10.000000000 +0200
++++ configure	2015-02-22 19:50:14.434640148 +0100
+@@ -3876,6 +3876,47 @@
+ 
+ 
+ 
++{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for RAND_egd in -lcrypto" >&5
++$as_echo_n "checking for RAND_egd in -lcrypto... " >&6; }
++if ${ac_cv_lib_crypto_RAND_egd+:} false; then :
++  $as_echo_n "(cached) " >&6
++else
++  ac_check_lib_save_LIBS=$LIBS
++LIBS="-lcrypto  $LIBS"
++cat confdefs.h - <<_ACEOF >conftest.$ac_ext
++/* end confdefs.h.  */
++
++/* Override any GCC internal prototype to avoid an error.
++   Use char because int might match the return type of a GCC
++   builtin and then its argument prototype would still apply.  */
++#ifdef __cplusplus
++extern "C"
++#endif
++char RAND_egd ();
++int
++main ()
++{
++return RAND_egd ();
++  ;
++  return 0;
++}
++_ACEOF
++if ac_fn_c_try_link "$LINENO"; then :
++  ac_cv_lib_crypto_RAND_egd=yes
++else
++  ac_cv_lib_crypto_RAND_egd=no
++fi
++rm -f core conftest.err conftest.$ac_objext \
++    conftest$ac_exeext conftest.$ac_ext
++LIBS=$ac_check_lib_save_LIBS
++fi
++{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_RAND_egd" >&5
++$as_echo "$ac_cv_lib_crypto_RAND_egd" >&6; }
++if test "x$ac_cv_lib_crypto_RAND_egd" = xyes; then :
++
++$as_echo "#define HAVE_RAND_EGD 1" >>confdefs.h
++
++fi
+ 
+ 
+ 

Property changes on: irc/unreal/files/patch-configure
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+text/plain
\ No newline at end of property
Added: fbsd:nokeywords
## -0,0 +1 ##
+yes
\ No newline at end of property
Added: svn:eol-style
## -0,0 +1 ##
+native
\ No newline at end of property
Index: irc/unreal/files/patch-configure.ac
===================================================================
--- irc/unreal/files/patch-configure.ac	(revision 0)
+++ irc/unreal/files/patch-configure.ac	(working copy)
@@ -0,0 +1,11 @@
+--- configure.ac.orig	2014-07-26 17:42:10.000000000 +0200
++++ configure.ac	2015-02-22 18:05:11.071679127 +0100
+@@ -93,6 +93,8 @@
+ AC_CHECK_LIB(nsl, inet_ntoa,
+ 	[IRCDLIBS="$IRCDLIBS-lnsl "
+ 		INETLIB="-lnsl"])
++AC_CHECK_LIB(crypto, RAND_egd, 
++		AC_DEFINE(HAVE_RAND_EGD, 1, [Define if the libcrypto has RAND_egd]))
+ 
+ AC_SUBST(IRCDLIBS)
+ AC_SUBST(MKPASSWDLIBS)

Property changes on: irc/unreal/files/patch-configure.ac
___________________________________________________________________
Added: fbsd:nokeywords
## -0,0 +1 ##
+yes
\ No newline at end of property
Added: svn:eol-style
## -0,0 +1 ##
+native
\ No newline at end of property
Added: svn:mime-type
## -0,0 +1 ##
+text/plain
\ No newline at end of property
Index: irc/unreal/files/patch-include_dynconf.h
===================================================================
--- irc/unreal/files/patch-include_dynconf.h	(revision 0)
+++ irc/unreal/files/patch-include_dynconf.h	(working copy)
@@ -0,0 +1,14 @@
+--- include/dynconf.h.orig	2014-07-26 17:42:10.000000000 +0200
++++ include/dynconf.h	2015-02-25 20:44:09.939110131 +0100
+@@ -204,7 +204,11 @@
+ #define SHOWCONNECTINFO			iConf.show_connect_info
+ #define OPER_ONLY_STATS			iConf.oper_only_stats
+ #define ANTI_SPAM_QUIT_MSG_TIME		iConf.anti_spam_quit_message_time
++#ifdef HAVE_RAND_EGD
+ #define USE_EGD				iConf.use_egd
++#else
++#define USE_EGD				0
++#endif
+ #define EGD_PATH			iConf.egd_path
+ 
+ #define ircnetwork			iConf.network.x_ircnetwork

Property changes on: irc/unreal/files/patch-include_dynconf.h
___________________________________________________________________
Added: fbsd:nokeywords
## -0,0 +1 ##
+yes
\ No newline at end of property
Added: svn:eol-style
## -0,0 +1 ##
+native
\ No newline at end of property
Added: svn:mime-type
## -0,0 +1 ##
+text/plain
\ No newline at end of property
Index: irc/unreal/files/patch-src_random.c
===================================================================
--- irc/unreal/files/patch-src_random.c	(revision 0)
+++ irc/unreal/files/patch-src_random.c	(working copy)
@@ -0,0 +1,20 @@
+--- src/random.c.orig	2014-07-26 17:42:10.000000000 +0200
++++ src/random.c	2015-02-25 20:49:36.769099626 +0100
+@@ -163,7 +163,7 @@
+ void init_random()
+ {
+ struct {
+-#ifdef USE_SSL
++#if defined(USE_SSL)
+ 	char egd[32];			/* from EGD */
+ #endif
+ #ifndef _WIN32
+@@ -187,7 +187,7 @@
+ 
+ 	/* Grab non-OS specific "random" data */
+ #ifdef USE_SSL
+- #if OPENSSL_VERSION_NUMBER >= 0x000907000
++ #if OPENSSL_VERSION_NUMBER >= 0x000907000 && defined(HAVE_RAND_EGD)
+ 	if (EGD_PATH) {
+ 		n = RAND_query_egd_bytes(EGD_PATH, rdat.egd, sizeof(rdat.egd));
+ 	}

Property changes on: irc/unreal/files/patch-src_random.c
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+text/plain
\ No newline at end of property
Added: fbsd:nokeywords
## -0,0 +1 ##
+yes
\ No newline at end of property
Added: svn:eol-style
## -0,0 +1 ##
+native
\ No newline at end of property
