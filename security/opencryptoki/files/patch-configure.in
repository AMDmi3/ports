--- configure.in.orig	2015-12-04 22:06:35 UTC
+++ configure.in
@@ -6,6 +6,9 @@ AC_CANONICAL_SYSTEM
 
 AM_INIT_AUTOMAKE([foreign 1.6])
 
+AC_DEFINE(_BSD_SOURCE, 1, BSD functions)
+AC_DEFINE(__BSD_VISIBLE, 1, BSD extensions)
+
 dnl Checks for header files.
 AC_DISABLE_STATIC
 LT_INIT
@@ -25,6 +28,7 @@ AC_FUNC_MEMCMP
 AC_FUNC_STRFTIME
 AC_FUNC_VPRINTF
 AC_CHECK_FUNCS([getcwd])
+AC_CHECK_FUNCS([asprintf])
 
 dnl Used in various scripts
 AC_PATH_PROG([ID], [id], [/us/bin/id])
@@ -166,6 +170,21 @@ AC_ARG_WITH([systemd],
 	[],
 	[with_systemd=no])
 
+dnl --- check for pkcs11 user
+AC_ARG_WITH([pkcs11user],
+	AC_HELP_STRING([--with-pkcs11user[[=USER]]], [set pkcs11 user [[pkcs11]]]),
+        [pkcs11_user=$withval],
+        [pkcs11_user=pkcs11])
+
+dnl --- check for pkcs11 group
+AC_ARG_WITH(pkcs11group,
+	AC_HELP_STRING([--with-pkcs11group[[=GROUP]]], [set pkcs11 group [[pkcs11]]]),
+	[pkcs11_group=$withval],
+	[pkcs11_group=pkcs11])
+
+AC_SUBST(PKCS11USER, $pkcs11_user)
+AC_SUBST(PKCS11GROUP, $pkcs11_group)
+
 dnl ---
 dnl ---
 dnl --- Now that we have all the options, let's check for a valid build
@@ -556,11 +575,15 @@ AM_CONDITIONAL([ENABLE_PKCSEP11_MIGRATE]
 
 CFLAGS="$CFLAGS -DPKCS64 -D_XOPEN_SOURCE=500 -Wall -Wno-pointer-sign"
 
-CFLAGS+=' -DCONFIG_PATH=\"$(localstatedir)/lib/opencryptoki\" -DSBIN_PATH=\"$(sbindir)\" -DLIB_PATH=\"$(libdir)\" -DLOCKDIR_PATH=\"$(lockdir)\" -DOCK_CONFDIR=\"$(sysconfdir)/opencryptoki\" -DOCK_LOGDIR=\"$(logdir)\"'
+CFLAGS="$CFLAGS -DCONFIG_PATH='\"$(localstatedir)/lib/opencryptoki\"' -DSBIN_PATH='\"$(sbindir)\"' -DLIB_PATH='\"$(libdir)\"' -DLOCKDIR_PATH='\"$(lockdir)\"' -DOCK_CONFDIR='\"$(sysconfdir)/opencryptoki\"' -DOCK_LOGDIR='\"$(logdir)\"'"
+
+CFLAGS="$CFLAGS -DPKCS11USER='\"${pkcs11_user}\"' -DPKCS11GROUP='\"${pkcs11_group}\"'"
 
 # At this point, CFLAGS is set to something sensible
 AC_PROG_CC
 
+AC_SUBST(FPIC, $lt_prog_compiler_pic)
+
 AC_CONFIG_FILES([Makefile usr/Makefile \
           usr/include/Makefile \
           usr/include/pkcs11/Makefile \
